{
  "swagger": "2.0",
  "info": {
    "title": "cep-middleware",
    "version": "1.0",
    "contact": {
      "email": "drobniac@gmail.com"
    },
    "description": "This Web API has the purpose of delegating requests to various supported CEP engines while also defining a unique interface for CEP Engine consumption"
  },
  "tags": [
    {
      "name": "base"
    },
    {
      "name": "engines"
    },
    {
      "name": "engineRules"
    },
    {
      "name": "archivedRules"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Provides possible operations within the API",
        "tags": [
          "base"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/engines": {
      "get": {
        "summary": "Returns all available CEP engines",
        "tags": [
          "engines"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "post": {
        "summary": "Add a CEP engine",
        "tags": [
          "engines"
        ],
        "parameters": [
          {
            "name": "engine",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CEPEngine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/engines/{engineId}": {
      "get": {
        "summary": "Returns info about the engine",
        "tags": [
          "engines"
        ],
        "parameters": [
          {
            "name": "engineId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Requested CEP engine does not exist"
          }
        }
      },
      "delete": {
        "summary": "Remove a CEP engine",
        "tags": [
          "engines"
        ],
        "parameters": [
          {
            "name": "engineId",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "cascade",
            "required": false,
            "in": "query",
            "type": "boolean",
            "description": "If cascade is set to true, selected engine will be deleted physically along with its rules, else, engine will be physically deleted and its rules archived"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Requested CEP engine does not exist"
          }
        }
      },
      "put": {
        "summary": "Update properties of a specified engine",
        "tags": [
          "engines"
        ],
        "parameters": [
          {
            "name": "engineId",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "engine",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CEPEngine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Requested CEP engine does not exist"
          }
        }
      }
    },
    "/engines/{engineId}/rules": {
      "get": {
        "summary": "Returns all rules within the engine",
        "tags": [
          "engineRules"
        ],
        "parameters": [
          {
            "name": "engineId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "CEP engine doesn't exist"
          }
        }
      },
      "post": {
        "summary": "Create a single rule within the engine",
        "tags": [
          "engineRules"
        ],
        "parameters": [
          {
            "name": "engineId",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "rule",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Rule successfully created"
          },
          "400": {
            "description": "Rule doesn't exist or the engine doesn't exist"
          },
          "405": {
            "description": "A rule with the given Id already exists for the given engine, thus the creation failed"
          }
        }
      }
    },
    "/engines/{engineId}/rules/{ruleId}": {
      "get": {
        "summary": "Returns a single rule within the engine",
        "tags": [
          "engineRules"
        ],
        "parameters": [
          {
            "name": "engineId",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "ruleId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Requested rule doesn't exist or the engine doesn't exist"
          }
        }
      },
      "delete": {
        "summary": "Removes a single rule from the engine",
        "tags": [
          "engineRules"
        ],
        "parameters": [
          {
            "name": "engineId",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "ruleId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Requested rule doesn't exist within the given engine or the engine doesn't exist"
          }
        }
      },
      "put": {
        "summary": "Modify a single rule within the engine",
        "tags": [
          "engineRules"
        ],
        "parameters": [
          {
            "name": "engineId",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "ruleId",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "rule",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rule successfully modified"
          },
          "404": {
            "description": "Requested rule doesn't exist within the given engine or the engine doesn't exist"
          }
        }
      }
    },
    "/archived-rules": {
      "get": {
        "summary": "Returns archived rules",
        "tags": [
          "archivedRules"
        ],
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Get all rules of specified type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Given type is not supported"
          }
        }
      }
    },
    "/archived-rules/{ruleId}": {
      "get": {
        "summary": "Returns archived rule",
        "tags": [
          "archivedRules"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Archived rule doesn't exist"
          }
        }
      }
    },
    "/archived-rules/{ruleId}/reassignment": {
      "post": {
        "summary": "Assigns the archived rule to an existing engine",
        "tags": [
          "archivedRules"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "reassignment",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Reassignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Archived rule doesn't exist"
          },
          "400": {
            "description": "Can't assign to specified engine because the engine doesnt exist or there is a type mismatch"
          }
        }
      }
    }
  },
  "definitions": {
    "Rule" : {
      "type": "object",
      "properties": {
      }
    },
    "CEPEngine": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "example": "perseo-test"
        },
        "engineType": {
          "type": "string",
          "example": "Perseo"
        },
        "hostUrl": {
          "type": "string",
          "example": "http://www.wryyyyy.com"
        }
      }
    },
    "Reassignment": {
      "type": "object",
      "properties": {
        "newOwner": {
          "type": "string",
          "example": "perseo2"
        },
        "active": {
          "type": "boolean",
          "example": "true"
        }
      }
    }
  }
}